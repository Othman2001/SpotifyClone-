{"version":3,"sources":["log.png","SidebarOption.jsx","DataLayer.js","Sidebar.jsx","Header.jsx","SongRow.jsx","Body.jsx","Footer.jsx","Player.jsx","spotify.js","Login.jsx","App.js","reducer.js","serviceWorker.js","index.js"],"names":["module","exports","SidebarOption","title","Icon","className","DataLayerContext","createContext","DataLayer","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","SideBar","playlists","console","log","src","alt","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","album","artists","artist","join","Body","spotify","discover_weekly","dispatch","id","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","onClick","context_uri","fontSize","tracks","Footer","token","Grid","container","spacing","xs","Slider","aria-labelledby","Player","LoginUrl","Login","href","SpotifyWebApi","App","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","response","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e2ac583.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/log.f4313f26.png\";","import React from 'react';\r\nimport \"./SidebarOption.css\"\r\n\r\n\r\nfunction SidebarOption({title, Icon}){\r\n    return(\r\n    <div className = \"options\">\r\n   {Icon && <Icon className=\"Icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n      </div>\r\n    );\r\n}\r\nexport default SidebarOption;","\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ reducer, initialState, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(DataLayerContext);\r\n","import React from 'react';\r\nimport \"./sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStateValue } from './DataLayer';\r\nfunction SideBar(){\r\n  const [{playlists}, dispatch] = useStateValue();\r\n  console.log(playlists);\r\n    return(\r\n      <div className = \"Sidebar\">\r\n       <img className = \"sidbar_logo\" \r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt />\r\n      <SidebarOption Icon = {HomeIcon} title = \"Home\" />\r\n      <SidebarOption  Icon = {SearchIcon}  title = \"Search\" />\r\n      <SidebarOption  Icon = {LibraryMusicIcon} title = \"Your Library\" />\r\n        <br />\r\n        <strong className= \"sidebar_title\" >PlayLists</strong>\r\n       <hr />\r\n       {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n       </div>\r\n    );\r\n}\r\nexport default SideBar;","import React from 'react';\r\nimport \"./header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport {useStateValue} from './DataLayer';\r\nfunction Header() {\r\n    const [{user}, dispatch] = useStateValue();\r\n    return(\r\n\r\n    <div className = \"header\">\r\n        <div className=\"header_left\">\r\n     <SearchIcon />\r\n     <input\r\n     placeholder = \"Search for Artists, Songs, Or PlayLists\" type = \"text\" />\r\n        </div>\r\n        <div className=\"header_right\">\r\n         <Avatar src = {user?.images[0]?.url} alt = \"user\" />\r\n         <h4>\r\n             {user?.display_name}\r\n         </h4>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport \"./songrow.css\"\r\nfunction SongRow( {track, playSong} ) {\r\n    return (\r\n        <div className=\"songRow\">\r\n          <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n          <div className=\"songRow__info\">\r\n            <h1>{track.name}</h1>\r\n            <p>\r\n              {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n              {track.album.name}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }export default SongRow ;","import React from 'react';\r\nimport \"./Body.css\";\r\nimport Header from './Header';\r\nimport {useStateValue} from './DataLayer';\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\nfunction Body( {spotify}) {\r\n\r\n    \r\nconst [{discover_weekly}, dispatch] = useStateValue();\r\n\r\nconst playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\nreturn (\r\n    <div className=\"body\">\r\n    <Header spotify={spotify} />\r\n\r\n    <div className=\"body__info\">\r\n      <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n      <div className=\"body__infoText\">\r\n        <strong>PLAYLIST</strong>\r\n        <h2>Discover Weekly</h2>\r\n        <p>{discover_weekly?.description}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"body__songs\">\r\n      <div className=\"body__icons\">\r\n        <PlayCircleFilledIcon\r\n          className=\"body__shuffle\"\r\n          onClick={playPlaylist}\r\n        />\r\n        <FavoriteIcon fontSize=\"large\" />\r\n        <MoreHorizIcon />\r\n      </div>\r\n\r\n      {discover_weekly?.tracks.items.map((item) => (\r\n        <SongRow playSong={playSong} track={item.track} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\nexport default Body;","import React, {useEffect, useState} from 'react';\r\nimport \"./Footer.css\";\r\nimport { useStateValue } from \"./DataLayer\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport { Grid, Slider } from '@material-ui/core';\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\nfunction Footer() {\r\n    const [{ token, item, playing }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src=\"https://i.scdn.co/image/ab67616d0000b273abf13a20e745572fc39f939b\"\r\n          alt={item?.name}\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon className=\"footer__icon\" />\r\n        <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n           \r\n          />\r\n        <SkipNextIcon  className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer; ","import React from 'react';\r\nimport \"./player.css\";\r\nimport SideBar from './Sidebar';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nfunction Player({spotify}) {\r\n    return(\r\n        <div className =\"player\">\r\n      <div className=\"player-body\">\r\n      <SideBar />\r\n          <Body spotify = {spotify} />\r\n        \r\n        <Footer />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Player;\r\n//sidebar \r\n\r\n//body \r\n\r\n//footer","//this is and stdanrd js file to deal with api \r\n//spotify autherication sending the user data ton spotify server by api\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst clientId = \"21967e99f7d64339b17f1919e23df841\";\r\n//userApis\r\nconst scopes = [\r\n\"user-read-currently-playing\",//play music\r\n\"user-read-recently-played\",//wathc your recenlty \r\n\"user-read-playback-state\",//playback\r\n\"user-top-read\",//top read of the user\r\n\"user-modify-playback-state\",//user modifaction \r\n];\r\n//youd don't have to understand every l9ine of code this is stndard \r\nexport const getTokenFromResponse = () => {\r\n    return window.location.hash\r\n      .substring(1)\r\n      .split(\"&\")\r\n      .reduce((initial, item) => {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n  \r\n        return initial;\r\n      }, {});\r\n  };\r\nexport const LoginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    \"%20\"\r\n  )}&response_type=token&show_dialog=true`;\r\n  //loginurl  =endpoint, cliendid = $clientid , &redircet url = $redirecturl, &scope = $scopejoin(\"%20\"))}}defult code etc  ","import React from 'react';\r\nimport './Login.css';\r\nimport log from './log.png';\r\nimport {LoginUrl} from './spotify';\r\nfunction Login() {\r\n    return(\r\n        <div className =\"login\">\r\n        <img src={log} alt=\"logo\"/>\r\n        <a href = {LoginUrl} >Login With Spotify</a>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React,{useEffect, useState} from 'react';\nimport SpotifyWebApi from \"spotify-web-api-js\"\nimport Player from './Player';\nimport {getTokenFromResponse} from \"./spotify\";\nimport \"./App.css\";\nimport Login from './Login';\nimport {useStateValue} from './DataLayer';\n//import Login from './Login';\n\n//create spotify web api \nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n//state\n\nconst[{user , token}, dispatch] = useStateValue(); \n\n//use effect will run code in spefice condition \n//keeb eye in window location\n//when the app loads then do the followint that the usage if the following use effect\n  \n\nuseEffect(() => {\n  // Set token\n  const hash = getTokenFromResponse();\n  window.location.hash = \"\";\n  let _token = hash.access_token;\n\n  if (_token) {\n    spotify.setAccessToken(_token);\n\n    dispatch({\n      type: \"SET_TOKEN\",\n      token: _token,\n    });\n\n    spotify.getMe().then((user) => {\n      dispatch({\n        type: \"SET_USER\",\n        user,\n      });\n    });\n\n    spotify.getUserPlaylists().then((playlists) => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlists,\n      });\n      spotify.getPlaylist(\"1ADT4YoA4yRyprZNgpUMgp\").then((response)=> \n      dispatch({\n        type:\"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response,\n      }))\n    });\n  }\n}, [token, dispatch]);\n\n  return (\n    <div className=\"App\">\n    {\n      //render compoent depends on speific condtion \n     token ? (\n       <div>\n       <Player spotify={spotify} />\n\n       </div>\n     ): (\n      <Login />\n     )\n    }\n   \n    </div>\n  );\n}\n\nexport default App;\n//<!-- The core Firebase JS SDK is always required and must be listed first -->\n//<script src=\"/__/firebase/7.17.1/firebase-app.js\"></script>\n//<!-- TODO: Add SDKs for Firebase products that you want to use\n    // https://firebase.google.com/docs/web/setup#available-libraries -->\n//<script src=\"/__/firebase/7.17.1/firebase-analytics.js\"></script>\n//<!-- Initialize Firebase -->\n//<script src=\"/__/firebase/init.js\"></script>\n// 21967e99f7d64339b17f1919e23df841\n//react api context \n//\n//\"BQCq14axfMYx_zVFNtJ-sPJ250cc4w5rA3iacmRkpGof__Wy_uRaUQiV0DwzuayNYxjyi2bgqvku-6wkI7hVeHzXGzkFEvk5JHBpB9RkNfhn56kjr--GUvFdcY33rxT_Ma-13yBxjUz3lJ10fQUF-5fQYxP912Un5mVtRH3lhmU_6O1P236y\"\n\n\n","\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport const initialState = {\r\n    user: null,\r\n    playlists:[],\r\n    playing:false,\r\n    item: null,\r\n    discover_weekly: null,\r\n    //remove after development thats helping only in depuggiong \r\n   token: null,\r\n\r\n  \r\n    \r\n};\r\nconst reducer = (state,action) =>{\r\n console.log(action);\r\n  \r\n switch(action.type){\r\n     case 'SET_USER':\r\n         return {\r\n             ...state,\r\n             user: action.user,\r\n         };\r\n         case 'SET_TOKEN':\r\n          return{\r\n              ...state,\r\n              token: action.token\r\n          };\r\n          case \"SET_PLAYLISTS\":\r\n            return {\r\n              ...state,\r\n              playlists: action.playlists,\r\n             \r\n            };\r\n            case \"SET_DISCOVER_WEEKLY\":\r\n              return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n              }\r\n       \r\n         default:\r\n             return state;\r\n }\r\n}\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {DataLayer} from \"./DataLayer\";\nimport intialstate from './reducer';\nimport * as serviceWorker from './serviceWorker';\nimport reducer,{ initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <DataLayer initialState={initialState}  reducer = {reducer}>\n    <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}